name: Build, Push Docker Image to ECR, and Deploy to EC2 via CodeDeploy

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 938652538677.dkr.ecr.ap-northeast-2.amazonaws.com

    - name: Build and push Docker image
      id: build-image
      run: |
        # Define the image name
        IMAGE_NAME=ecr_for_code_deploy

        # Build the Docker image
        docker build -t $IMAGE_NAME .

        # Tag the Docker image with the ECR repository URI
        docker tag $IMAGE_NAME:latest 938652538677.dkr.ecr.ap-northeast-2.amazonaws.com/$IMAGE_NAME:latest

        # Push the image to ECR
        docker push 938652538677.dkr.ecr.ap-northeast-2.amazonaws.com/$IMAGE_NAME:latest

    - name: Upload appspec.yml and scripts to S3
      run: |
        # Package appspec.yml and scripts
        zip -r deploy.zip appspec.yml scripts/

        # Upload to S3
        aws s3 cp deploy.zip s3://your-s3-bucket-name/deploy.zip

    - name: Deploy to EC2 via CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name your-codedeploy-app-name \
          --deployment-group-name your-codedeploy-deployment-group-name \
          --s3-location bucket=your-s3-bucket-name,bundleType=zip,key=deploy.zip
